Instrução JAL - jump and link
Essa instrução faz um salto para a soma do PC atual com o valor passado e salva o endereço de retorno, PC+4, no registrador de endereço, também chamado de $ra ou R[31].
Monociclo: a parte do salto é igual a um jump, que já estava implementado. Para salvar o endereço de retorno, foi inserido um mux dois para um na entrada de dados de escrita no banco de registradores e o mux que selecionava o registrador em escrita se tornou quatro para um com 31(hex 1f) na entrada 10. O sinal Link controla o mux conectado na entrada de dados de escrita e o bit 1 do outro mux, sendo que RegDst controla o bit 0. Esse sinal se torna 1 somente nessa instrução. Para a escrita acontecer o RegWrite deve ser ligado.
Multiciclo: o mux estava na entrada de dados de escrita se tornou quatro para um com com Link controlando o bit 1 e RegDst o bit 0 e o outro mux foi colocado como no monociclo. Foi adicionado um somador com PC+4 para calcular o endereço de retorno. O estado 13 foi implementado para essa instrução. Então os estados para a execução do JAL são 0, 1, 13 e 9. O estado 9 faz o salto.
Pipeline: basicamente o mesmo do moniciclo com o mux quatro para um implementado no multiciclo. As alterações aconteceram nos registradores de sinal que aumentaram de tamanho, por causa do sinal Link. Foram inseridos registradores para levar o valor PC+4 até o mux que define o dado a ser escrito.
